{
    "POST /api/v2/speechandtextanalytics/programs": {
        "operationId": "postspeechandtextanalyticsprograms",
        "functionName": "create",
        "signature": "create(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Programrequest",
                "required": "true"
            }
        ],
        "return": "Program"
    },
    "DELETE /api/v2/speechandtextanalytics/programs/{programId}": {
        "operationId": "deletespeechandtextanalyticsprogram",
        "functionName": "delete",
        "signature": "delete(programId, forceDelete)",
        "parameters": [
            {
                "name": "programId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "forceDelete",
                "type": "bool",
                "required": "false"
            }
        ]
    },
    "GET /api/v2/speechandtextanalytics/programs/{programId}": {
        "operationId": "getspeechandtextanalyticsprogram",
        "functionName": "get",
        "signature": "get(programId)",
        "parameters": [
            {
                "name": "programId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Program"
    },
    "GET /api/v2/speechandtextanalytics/programs": {
        "operationId": "getspeechandtextanalyticsprograms",
        "functionName": "list",
        "signature": "list(nextPage, pageSize)",
        "parameters": [
            {
                "name": "nextPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Swaggeroverridelist"
    },
    "PUT /api/v2/speechandtextanalytics/programs/{programId}": {
        "operationId": "putspeechandtextanalyticsprogram",
        "functionName": "update",
        "signature": "update(programId, body)",
        "parameters": [
            {
                "name": "programId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Programrequest",
                "required": "true"
            }
        ],
        "return": "Program"
    }
    
}