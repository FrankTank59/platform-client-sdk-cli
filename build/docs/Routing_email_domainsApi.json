{
    "POST /api/v2/routing/email/domains": {
        "operationId": "postroutingemaildomains",
        "functionName": "create",
        "signature": "create(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Inbounddomain",
                "required": "true"
            }
        ],
        "return": "Inbounddomain"
    },
    "DELETE /api/v2/routing/email/domains/{domainId}": {
        "operationId": "deleteroutingemaildomain",
        "functionName": "delete",
        "signature": "delete(domainId)",
        "parameters": [
            {
                "name": "domainId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "GET /api/v2/routing/email/domains/{domainId}": {
        "operationId": "getroutingemaildomain",
        "functionName": "get",
        "signature": "get(domainId)",
        "parameters": [
            {
                "name": "domainId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Inbounddomain"
    },
    "GET /api/v2/routing/email/domains": {
        "operationId": "getroutingemaildomains",
        "functionName": "list",
        "signature": "list(excludeStatus)",
        "parameters": [
            {
                "name": "excludeStatus",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Swaggeroverridelist"
    },
    "PATCH /api/v2/routing/email/domains/{domainId}": {
        "operationId": "patchroutingemaildomain",
        "functionName": "update",
        "signature": "update(domainId, body)",
        "parameters": [
            {
                "name": "domainId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Inbounddomainpatchrequest",
                "required": "true"
            }
        ],
        "return": "Inbounddomain"
    }
    
}