package models
import (
    "encoding/json"
    "strconv"
    "strings"
)

var (
    LocalencryptionkeyrequestMarshalled = false
)

// This struct is here to use the useless readonly properties so that their required imports don't throw an unused error (time, etc.)
type LocalencryptionkeyrequestDud struct { 
    


    


    

}

// Localencryptionkeyrequest
type Localencryptionkeyrequest struct { 
    // ConfigId - The local configuration id that contains metadata on private local service
    ConfigId string `json:"configId"`


    // PublicKey - Base 64 encoded public key, generated by the local service.
    PublicKey string `json:"publicKey"`


    // KeypairId - The key pair id from the local service.
    KeypairId string `json:"keypairId"`

}

// String returns a JSON representation of the model
func (o *Localencryptionkeyrequest) String() string {
    
    
    
    
    
    
    
    
    
    
    
    
    

    j, _ := json.Marshal(o)
    str, _ := strconv.Unquote(strings.Replace(strconv.Quote(string(j)), `\\u`, `\u`, -1))

    return str
}

func (u *Localencryptionkeyrequest) MarshalJSON() ([]byte, error) {
    type Alias Localencryptionkeyrequest

    if LocalencryptionkeyrequestMarshalled {
        return []byte("{}"), nil
    }
    LocalencryptionkeyrequestMarshalled = true

    return json.Marshal(&struct { 
        ConfigId string `json:"configId"`
        
        PublicKey string `json:"publicKey"`
        
        KeypairId string `json:"keypairId"`
        
        *Alias
    }{
        

        

        

        

        

        

        
        Alias: (*Alias)(u),
    })
}

